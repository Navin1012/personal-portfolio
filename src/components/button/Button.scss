// Button.scss
@import "../../_globalColor";

// Button Variables
$button-transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
$button-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
$button-shadow-hover: 0 8px 30px rgba(0, 0, 0, 0.15);

.button-wrapper {
  display: inline-block;
  
  // Project button specific
  &.project-button {
    display: flex;
    justify-content: center;
    margin-top: 2rem;
    width: 100%;
  }
}

.modern-button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  border: none;
  border-radius: 12px;
  font-weight: 600;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: $button-transition;
  overflow: hidden;
  isolation: isolate;
  font-family: inherit;
  
  // Remove default button styles
  background: none;
  
  // Size variants
  &.small {
    padding: 0.75rem 1.5rem;
    font-size: 0.875rem;
    min-height: 2.75rem;
  }
  
  &.medium {
    padding: 1rem 2rem;
    font-size: 1rem;
    min-height: 3.25rem;
  }
  
  &.large {
    padding: 1.25rem 2.5rem;
    font-size: 1.125rem;
    min-height: 3.75rem;
  }
  
  // Color variants
  &.primary {
    background: linear-gradient(135deg, $buttonColor 0%, $buttonHover 100%);
    color: white;
    box-shadow: $button-shadow;
    
    .button-hover-effect {
      background: linear-gradient(135deg, $buttonHover 0%, darken($buttonHover, 10%) 100%);
    }
    
    &:hover:not(.disabled):not(.loading) {
      transform: translateY(-3px);
      box-shadow: $button-shadow-hover, 0 0 0 4px rgba($buttonColor, 0.1);
    }
    
    &:active:not(.disabled):not(.loading) {
      transform: translateY(-1px);
      transition: transform 0.1s ease;
    }
  }
  
  &.secondary {
    background: transparent;
    color: $buttonColor;
    border: 2px solid $buttonColor;
    box-shadow: $button-shadow;
    
    .button-hover-effect {
      background: $buttonColor;
    }
    
    &:hover:not(.disabled):not(.loading) {
      background: $buttonColor;
      color: white;
      transform: translateY(-3px);
      box-shadow: $button-shadow-hover;
    }
  }
  
  &.ghost {
    background: transparent;
    color: $buttonColor;
    border: 2px solid transparent;
    
    .button-hover-effect {
      background: rgba($buttonColor, 0.1);
    }
    
    &:hover:not(.disabled):not(.loading) {
      background: rgba($buttonColor, 0.1);
      border-color: $buttonColor;
      transform: translateY(-2px);
    }
  }
  
  &.glass {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: white;
    box-shadow: $button-shadow;
    
    .button-hover-effect {
      background: rgba(255, 255, 255, 0.2);
    }
    
    &:hover:not(.disabled):not(.loading) {
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(12px);
      transform: translateY(-3px);
      box-shadow: $button-shadow-hover;
    }
  }
  
  // States
  &.disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
    box-shadow: none !important;
  }
  
  &.loading {
    cursor: wait;
    
    .button-text,
    .button-icon {
      opacity: 0;
    }
  }
  
  // Interactive elements
  .button-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    transition: $button-transition;
    z-index: 2;
  }
  
  .button-text {
    transition: $button-transition;
    z-index: 2;
  }
  
  .button-hover-effect {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    transition: $button-transition;
    z-index: -1;
    border-radius: inherit;
  }
  
  .button-ripple-effect {
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.6);
    transform: scale(0);
    animation: ripple 0.6s linear;
    pointer-events: none;
  }
  
  // Hover effects
  &:hover:not(.disabled):not(.loading) {
    .button-hover-effect {
      left: 0;
    }
    
    .button-icon {
      transform: translateX(2px);
    }
  }
  
  // Loading state
  .button-loader {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
  }
  
  .loader-spinner {
    width: 1.25rem;
    height: 1.25rem;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }
}

// Animations
@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

// Ripple effect JavaScript handler (would be added via useEffect in component)
.modern-button:active:not(.disabled):not(.loading)::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  animation: ripple 0.6s linear;
  pointer-events: none;
}

// Dark mode support
.dark-mode {
  .modern-button {
    &.secondary {
      color: #60a5fa;
      border-color: #60a5fa;
      
      &:hover:not(.disabled):not(.loading) {
        background: #60a5fa;
        color: white;
      }
    }
    
    &.ghost {
      color: #60a5fa;
      
      &:hover:not(.disabled):not(.loading) {
        background: rgba(96, 165, 250, 0.1);
        border-color: #60a5fa;
      }
    }
    
    &.glass {
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }
  }
}

// Responsive Design
@media (max-width: 768px) {
  .modern-button {
    &.small {
      padding: 0.625rem 1.25rem;
      font-size: 0.8rem;
      min-height: 2.5rem;
    }
    
    &.medium {
      padding: 0.875rem 1.75rem;
      font-size: 0.9rem;
      min-height: 3rem;
    }
    
    &.large {
      padding: 1rem 2rem;
      font-size: 1rem;
      min-height: 3.25rem;
    }
    
    &:hover:not(.disabled):not(.loading) {
      transform: translateY(-2px);
    }
  }
}

@media (max-width: 480px) {
  .modern-button {
    &.small {
      padding: 0.5rem 1rem;
      font-size: 0.75rem;
      gap: 0.5rem;
    }
    
    &.medium {
      padding: 0.75rem 1.5rem;
      font-size: 0.85rem;
      gap: 0.5rem;
    }
    
    &.large {
      padding: 0.875rem 1.75rem;
      font-size: 0.9rem;
      gap: 0.5rem;
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .modern-button {
    transition: none;
    
    &:hover:not(.disabled):not(.loading) {
      transform: none;
    }
    
    .button-hover-effect,
    .button-icon {
      transition: none;
    }
  }
  
  .button-ripple-effect {
    animation: none;
  }
  
  .loader-spinner {
    animation: none;
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .modern-button {
    border-width: 2px;
    
    &.ghost {
      border-width: 2px;
    }
    
    &:hover:not(.disabled):not(.loading) {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
  }
}